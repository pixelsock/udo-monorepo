# Render Blueprint for Charlotte UDO Monorepo
# This configuration deploys:
# - PostgreSQL database (managed)
# - Directus backend (private service)
# - Fumadocs frontend (static site)
# with private networking for optimal performance

databases:
  - type: postgres
    name: directus-db
    databaseName: directus
    user: directus_user
    plan: pro
    region: us-east
    ipAllowList: []  # Empty for private network access only

services:
  # Private Backend Service (Directus Extensions)
  # This service is NOT publicly accessible - only via private network
  - type: pserv
    name: directus-backend
    env: docker
    region: us-east
    plan: standard
    rootDirectory: backend
    dockerfilePath: ./Dockerfile

    # Monorepo build filter - only deploy when backend changes
    buildFilter:
      paths:
        - backend/**

    # Private networking - no public URL
    # Access via internal hostname: directus-backend

    envVars:
      # Database Connection (using property references for private network)
      - key: DB_CLIENT
        value: pg
      - key: DB_HOST
        fromDatabase:
          name: directus-db
          property: host
      - key: DB_PORT
        fromDatabase:
          name: directus-db
          property: port
      - key: DB_DATABASE
        fromDatabase:
          name: directus-db
          property: database
      - key: DB_USER
        fromDatabase:
          name: directus-db
          property: user
      - key: DB_PASSWORD
        fromDatabase:
          name: directus-db
          property: password

      # Directus Configuration
      - key: SECRET
        generateValue: true
      - key: ADMIN_EMAIL
        sync: false  # Set in dashboard
      - key: ADMIN_PASSWORD
        sync: false  # Set in dashboard
      - key: PUBLIC_URL
        value: https://admin.charlotteudo.org

      # Cache Configuration
      - key: CACHE_ENABLED
        value: 'true'
      - key: CACHE_AUTO_PURGE
        value: 'true'

      # CORS Configuration - Allow frontend
      - key: CORS_ENABLED
        value: 'true'
      - key: CORS_ORIGIN
        value: 'https://charlotte-udo-frontend.onrender.com,https://charlotteudo.org'
      - key: CORS_CREDENTIALS
        value: 'true'
      - key: CORS_ALLOWED_HEADERS
        value: 'Content-Type,Authorization,X-Orama-Analytics,X-Orama-Index'

      # CSP Configuration
      - key: CONTENT_SECURITY_POLICY_DIRECTIVES__FRAME_SRC
        value: "'self' https://charlotte-udo-frontend.onrender.com https://charlotteudo.org"
      - key: CONTENT_SECURITY_POLICY_DIRECTIVES__CHILD_SRC
        value: "'self' https://charlotte-udo-frontend.onrender.com https://charlotteudo.org blob:"
      - key: CONTENT_SECURITY_POLICY_DIRECTIVES__SCRIPT_SRC
        value: "array:'self',https://unpkg.com,data:,'unsafe-inline','unsafe-eval'"

      # WebSocket Configuration
      - key: WEBSOCKETS_ENABLED
        value: 'true'
      - key: WEBSOCKETS_HEARTBEAT_PERIOD
        value: '30'

      # Session Configuration
      - key: SESSION_COOKIE_SECURE
        value: 'true'
      - key: SESSION_COOKIE_SAME_SITE
        value: 'None'

      # Permissions Policy
      - key: PERMISSIONS_POLICY
        value: 'autoplay=*, encrypted-media=*, fullscreen=*, accelerometer=*, gyroscope=*, clipboard-write=*, web-share=*'

    # Persistent storage for uploads
    disk:
      name: directus-uploads
      mountPath: /directus/uploads
      sizeGB: 10

  # Static Frontend Site (Fumadocs)
  - type: web
    name: documentation-site
    env: static
    region: us-east
    plan: starter
    rootDirectory: frontend

    # Monorepo build filter - only deploy when frontend changes
    buildFilter:
      paths:
        - frontend/**

    # Build configuration for Next.js static export
    buildCommand: npm install && npm run build
    staticPublishPath: out

    # Custom domains (configure in Render dashboard)
    # domains:
    #   - charlotteudo.org
    #   - www.charlotteudo.org

    envVars:
      # Directus Configuration (using private network internal hostname)
      - key: DIRECTUS_URL
        value: http://directus-backend:8055
      - key: DIRECTUS_TOKEN
        sync: false  # Set in dashboard
      - key: DIRECTUS_EMAIL
        sync: false  # Set in dashboard
      - key: DIRECTUS_PASSWORD
        sync: false  # Set in dashboard

      # Orama Cloud Configuration
      - key: NEXT_PUBLIC_ORAMA_ENDPOINT
        sync: false  # Set in dashboard
      - key: NEXT_PUBLIC_ORAMA_API_KEY
        sync: false  # Set in dashboard

      # Next.js Configuration
      - key: NODE_ENV
        value: production
